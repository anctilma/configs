" {{{ compatibility
set nocompatible
if (has("win32"))
    source $VIMRUNTIME/vimrc_example.vim
    " source $VIMRUNTIME/mswin.vim
    " behave mswin
endif
" }}} compatibility
" {{{ plugins
if (has("win32"))
    call plug#begin('~/vimfiles/plugged')
else
    call plug#begin('~/.vim/plugged')
endif

Plug 'scrooloose/nerdtree'
Plug 'bling/vim-airline'
Plug 'kien/ctrlp.vim'
Plug 'felikz/ctrlp-py-matcher'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-obsession'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-vinegar'
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-unimpaired'
Plug 'scrooloose/syntastic'
Plug 'terryma/vim-multiple-cursors'
Plug 'terryma/vim-expand-region'
Plug 'easymotion/vim-easymotion'
Plug 'godlygeek/tabular'
Plug 'rking/ag.vim'
Plug 'majutsushi/tagbar'
Plug 'shougo/vimshell.vim'
Plug 'shougo/vimproc.vim'
Plug 'sjl/gundo.vim'
Plug 'will133/vim-dirdiff'
Plug 'nelstrom/vim-visual-star-search'
Plug 'nelstrom/vim-qargs'
Plug 'osyo-manga/vim-over'
Plug 'alvan/vim-closetag'
Plug 'tommcdo/vim-exchange'
Plug 'ludovicchabant/vim-gutentags'
"Plug 'rust-lang/rust.vim'
Plug 'junegunn/goyo.vim'
Plug 'xolox/vim-notes'
Plug 'xolox/vim-misc'
Plug 'qpkorr/vim-renamer'
Plug 'edsono/vim-matchit'
Plug 'davidhalter/jedi'
"Plug 'airblade/vim-gitgutter'

" theme plugins
Plug 'nanotech/jellybeans.vim'
Plug 'vim-scripts/solarized'

" plugins for UltiSnips and SuperTab support.
Plug 'sirver/ultisnips'
Plug 'tomtom/tlib_vim'
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'garbas/vim-snipmate'
Plug 'ervandew/supertab'

" extra snippet
Plug 'honza/vim-snippets'

" tmux plugins
if (!has("win32"))
Plug 'edkolev/tmuxline.vim'
Plug 'benmills/vimux'
endif

" on demand plugins example.
"Plug 'scrooloose/nerdtree', {'on': 'NERDTreeToggle'}

call plug#end()
" }}} /// plugins
" {{{ tmux configuration
" enable support for timuxline in airline
let g:airline#extensions#tmuxline#enabled = 1
let g:tmuxline_powerline_separators = 1
"let g:tmuxline_separators = {
"    \ 'left' : '',
"    \ 'left_alt': '>',
"    \ 'right' : '',
"    \ 'right_alt' : '<',
"    \ 'space' : ' '}
" }}} tmux configuration
" {{{ ctrlp configuration
let g:ctrlp_working_path_mode = 0
let g:ctrlp_map = '<leader>o'
let g:ctrlp_match_func = { 'match': 'pymatcher#PyMatch' }
if !(has ('win32'))
    let g:ctrlp_user_command = 'ag %s -i --nocolor --nogroup --hidden
          \ --ignore .git
          \ --ignore .svn
          \ --ignore "**/*.pyc"
          \ --ignore tags
          \ --ignore cscope.out
          \ -g ""'
endif
" }}} ctrlp configuration
"{{{ closetag configuration
" enable closetag for xml,html,htm,xhtml and ndb files
let g:closetag_filenames = "*.xml,*.html,*.htm,*.xhtml,*.ndb,*.2db,*.config,*.rss,*.scn"
"}}} closetag configuration
"{{{ airline configuration
" always display airline
set laststatus=2
" enable the tabline
let g:airline#extensions#tabline#enabled = 1
" show only the file name
let g:airline#extensions#tabline#fnamemod = ':t'

" set jellybeans theme for airline
let g:airline_theme = 'jellybeans'
" use the patched fonts
let g:airline_powerline_fonts = 1
" disable whitespace detection
let g:airline#extensions#whitespace#enabled = 0
" disable arrows
"let g:airline_left_sep = ''
"let g:airline_left_alt_sep = ''
"let g:airline_right_sep = ''
"let g:airline_right_alt_sep = ''
"}}} airline configuration
"{{{ syntastic configuration
" disable syntastic active check by default
let g:syntastic_mode_map = {"mode": "passive"}
"}}} syntastic configuration
" {{{ goyo configuration
let g:goyo_width  = 120
let g:goyo_height = 100 
" }}}
"{{{ autocmd
" set tab and indent configuration based on file type
if has("autocmd")
    "enable file type detection
    filetype on

    "syntax of makefile is fussy over tabs vs spaces
    autocmd FileType make       setlocal ts=8 sts=8 sw=8 noexpandtab
    autocmd FileType html       setlocal ts=4 sts=4 sw=4 expandtab
    autocmd FileType css        setlocal ts=4 sts=4 sw=4 expandtab
    autocmd FileType xml        setlocal ts=4 sts=4 sw=4 noexpandtab
    autocmd FileType c          setlocal ts=4 sts=4 sw=4 expandtab cindent comments-=:// comments+=f://
    autocmd FileType cpp        setlocal ts=4 sts=4 sw=4 expandtab cindent comments-=:// comments+=f://
    autocmd FileType cs         setlocal ts=4 sts=4 sw=4 expandtab cindent comments-=:// comments+=f://
    autocmd FileType python     setlocal ts=4 sts=4 sw=4 expandtab autoindent
    autocmd FileType javascript setlocal ts=4 sts=4 sw=4 expandtab comments-=:// comments+=f://
    autocmd FileType vim        setlocal ts=4 sts=4 sw=4 expandtab

    " change de default comment style to c++ for c++ files
    autocmd FileType cpp,cs     setlocal commentstring=//\ %s
    " use cscope for navigation in c and c++
    "autocmd FileType cpp        set cscopetag

    " Treat the files with the following extentions as xml
    autocmd BufNewFile,BufRead *.rss,*.ndb,*.2db,*.config,*.scn setfiletype xml
endif
"}}} autocmd
" {{{ mappings

" map leader key to space
let mapleader="\<space>"

" map F12 to toggle NERDTree
noremap <silent> <F12> :NERDTreeToggle<CR>

" map F10 to toggle whitespace detection
noremap <silent> <F10> :AirlineToggleWhitespace<CR>:SyntasticToggleMode<CR>

" map F9 to toggle tag bar
noremap <silent> <F9> :TagbarToggle<CR>

" map F5 to toggle gundo
nnoremap <silent> <F5> :GundoToggle<CR>

" bubble text up and down with ctrl-up and down (required unimpaired plugin)
" bubble single lines
nmap <C-Up> [e
nmap <C-Down> ]e
" bubble multiple lines
vmap <C-Up> [egv
vmap <C-Down> ]egv

" map bashing j and k in random order to ESC
inoremap jk <esc>
inoremap kj <esc>

" map ctrl-x to buffer delete
nnoremap <c-x> :bd<CR>

" map Ctrl-K Ctrl-O to toggle .h/.cpp file (same as Visual Studio)
map <c-k><c-o> :e %:p:s,.h$,.X123X,:s,.cpp$,.h,:s,.X123X$,.cpp,<CR>

" quick pairs
" imap <leader>' ''<ESC>i
" imap <leader>" ""<ESC>i
" imap <leader>( ()<ESC>i
" imap <leader>[ []<ESC>i

" enable using ctrl-numpad+ for incrementing
noremap <C-kPlus> <C-A>

" enable using ctrl-numpad- for decrementing
noremap <C-kMinus> <C-X>

" center after search
"nmap n nzz
"nmap N Nzz

" map leader-w to ctrl-w
nnoremap <leader>w <c-w>

" map space k and space j to buffer next and buffer previous
nnoremap <leader>k :bn<CR>
nnoremap <leader>j :bp<CR>

" map leader-t to CtrlPTag
nnoremap <leader>t :CtrlPTag<CR>

" }}} mappings
" {{{ folding
" reasonable folding
set foldenable
set foldlevelstart=0
set foldnestmax=10
nnoremap <leader>f za
set foldmethod=marker
" }}}
" {{{ gui vs terminal
if has('gui_running')
    set guioptions-=T " remove tool bar
    set guioptions-=m " remove menu bar
    set guioptions-=r " remove righ-hand scroll bar
    set guioptions-=L " remove left-hand scroll bar
    " use the jellybeans color scheme
    colorscheme jellybeans
    if has ('win32')
        set guifont=Powerline_Consolas:h11:cANSI
    else
        set guifont=Inconsolata\ for\ Powerline\ Medium\ 13
    endif
    set linespace=0
    set lines=40
    set columns=170
else
    " Enable mouse support.
    set mouse=a
    set term=xterm-256color
    set t_ut= "disable Background Color Erase (BCE)
    set t_Co=256
    colorscheme jellybeans
endif

" }}} gui vs terminal
" {{{ misc

" enable line numbers
set number

" enable relative line numbers
set relativenumber

" don't create the ~filename files
"set nobackup

" store swap, backup and undo files in a central location instead of the
" current directory
if (has("win32"))
    set dir=~/vimswap//
    set backupdir=~/vimbackup//
    set undodir=~/vimundo//
else
    set dir=~/.vimswap//
    set backupdir=~/.vimbackup//
    set undodir=~/.vimundo//
endif

" turn off highlighted search by default, turn on only when needed.
" set nohlsearch

" turn on incremental search (search as character are entered)
set incsearch

" always show at least one line above/below the cursor
"set scrolloff=1

" redraw only when we need to
set lazyredraw

" briefly hightligh matching [{()}]
set showmatch

" turn on virtual edit so we can navigate beyond the valid text
"set virtualedit=all

" turn on the wildmenu
set wildmenu

" disable line wrap
set nowrap

" enable cursorline
set cul

" highlight last inserted text
nnoremap gV `[v`]

" disable startup screen
set shortmess=I

" show whitespaces when calling set list
set encoding=utf-8
scriptencoding=utf-8
set listchars=tab:>\ ,eol:Â¬,extends:>,precedes:<

" }}}misc
