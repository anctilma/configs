set nocompatible
source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin

" my plugins here:
call plug#begin('~/vimfiles/plugged')

Plug 'bling/vim-airline'
Plug 'kien/ctrlp.vim'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-obsession'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-vinegar'
Plug 'tpope/vim-dispatch'
Plug 'scrooloose/syntastic'
Plug 'terryma/vim-multiple-cursors'
Plug 'terryma/vim-expand-region'
Plug 'Lokaltog/vim-easymotion'
Plug 'godlygeek/tabular'
Plug 'mileszs/ack.vim'
Plug 'majutsushi/tagbar'
Plug 'ervandew/supertab'
Plug 'osyo-manga/vim-over'
Plug 'Shougo/vimshell.vim'
Plug 'Shougo/vimproc.vim'

Plug 'sjl/gundo.vim'
"Plug 'airblade/vim-gitgutter'

" Plugins for snippets support
Plug 'sirver/ultisnips'
Plug 'tomtom/tlib_vim'
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'garbas/vim-snipmate'
Plug 'honza/vim-snippets'
Plug 'alvan/vim-closetag'

" on demand plugins
Plug 'scrooloose/nerdtree', {'on': 'NERDTreeToggle'}

call plug#end()

" map F12 to toggle NERDTree
noremap <silent> <F12> :NERDTreeToggle<CR>

" map F10 to toggle whitespace detection
noremap <silent> <F10> :AirlineToggleWhitespace<CR>:SyntasticToggleMode<CR>

" map F9 to toggle tag bar
noremap <silent> <F9> :TagbarToggle<CR>

" map F% to toggle gundo
nnoremap <F5> :GundoToggle<CR>

" otherwise, use cscope for navigation
set cscopetag

" change de default comment style to c++ for c++ files
autocmd FileType cpp,cs setlocal commentstring=//\ %s

" enable closetag for xml,html,htm,xhtml and ndb files.
let g:closetag_filenames = "*.xml,*.html,*.htm,*.xhtml,*.ndb,*.2db,*.config"

" always display airline
set laststatus=2
" enable the tabline
let g:airline#extensions#tabline#enabled = 1
" show only the file name
let g:airline#extensions#tabline#fnamemod = ':t'
" set jellybeans theme for airline
let g:airline_theme = 'jellybeans'
" use the patched fonts
let g:airline_powerline_fonts = 1
" disable whitespace detection
let g:airline#extensions#whitespace#enabled = 0

" disable syntastic active check by default
let g:syntastic_mode_map = {"mode": "passive"}

" disable arrows
"let g:airline_left_sep = ''
"let g:airline_left_alt_sep = ''
"let g:airline_right_sep = ''
"let g:airline_right_alt_sep = ''

" disable arrow navigation and add line move on arrow up and down
noremap <Up> ddkP
noremap <Down> ddp
noremap <Left> <Nop>
noremap <Right> <Nop>

" map bashing j and k in random order to ESC
inoremap jk <esc>
inoremap kj <esc>

" map ctrl-tab to buffer next
nmap <c-tab> :bn<CR>
nmap <c-s-tab> :bp<CR>

" map ctrl-x to buffer delete
nmap <c-x> :bd<CR>

" map Ctrl-K Ctrl-O to toggle .h/.cpp file (same as Visual Studio)
 map <c-k><c-o> :e %:p:s,.h$,.X123X,:s,.cpp$,.h,:s,.X123X$,.cpp,<CR>

" ctrl-p configuration
let g:ctrlp_working_path_mode = 0
let g:ctrlp_map = '<leader>f'

" quick pairs
imap <leader>' ''<ESC>i
imap <leader>" ""<ESC>i
imap <leader>( ()<ESC>i
imap <leader>[ []<ESC>i

" enable using ctrl-numpad+ for incrementing since ctrl-a is remapped to
" select all on Windows
noremap <C-kPlus> <C-A>

" center after search
"nmap n nzz
"nmap N Nzz

" replace tabs with 4 spaces
set tabstop=4 softtabstop=4 shiftwidth=4 expandtab

" enable C language style indentation
set cindent

" enable line numbers
set number

" enable relative line numbers
set relativenumber

" show whitespaces when calling set list
set listchars=tab:>\ ,eol:¬,extends:>,precedes:<

" use the jellybeans color scheme
colorscheme jellybeans

" don't create the ~filename files
set nobackup

" turn off highlighted search by default, turn on only when needed.
set nohlsearch

" turn on incremental search (search as character are entered)
set incsearch

" redraw only when we need to
set lazyredraw

" briefly hightligh matching [{()}]

" turn on virtual edit so we can navigate beyond the valid text
"set virtualedit=all

" turn on the wildmenu
set wildmenu

" disable line wrap
set nowrap

" enable cursorline
set cul

" reasonable folding
set foldenable
set foldlevelstart=10
set foldnestmax=10
nnoremap <space> za
"set foldmethod=indent
set foldmethod=marker

" map leader key to comma
let mapleader = ","

" highlight last inserted text
nnoremap gV `[v`]

" gui only options
if has('gui_running')
  set guioptions=
  set guioptions+=r
"   set guioptions-=T " remove tool bar
"  set guioptions-=m " remove menu bar
"  set guioptions-=r " remove right-hand scroll bar
"  set guioptions-=l " remove right-hand scroll bar
"  set guioptions-=b " remove bottom scroll bar
"  set lines=63
"  set columns=239
  set lines=40
  set columns=170
  set encoding=utf-8
  scriptencoding=utf-8
  set guifont=Powerline_Consolas:h11:cANSI
  "set guifont=Inconsolata_for_Powerline_Medium:h11:cANSI
  "set guifont=Consolas:h11:cANSI
  set linespace=0
endif

" disable startup screen
set shortmess=I
